#!/bin/bash

# WeeChat configurator for Chads
H=${HOME}/.weechad

main() {
  logo


  if [ "$INSTALL" ]; then
    err "Install function selected: $INSTALL"
    install-something "$INSTALL" || {
      err "Install error in: $INSTALL"
      exit 1
    }
    exit 0
  fi

  ############
  # SETUP MAIN
  [ -d $H ] && {
    err "Cannot overwrite: $H"
    err "If you are really sure, delete and run again."
    exit 1
  }

  command -v weechat >/dev/null || {
    err "WeeChat not installed."
    exit 1
  }

  # TODO: better version checking
  wcver=`weechat -v`
  echo ${wcver} | grep 4.4.. >/dev/null || {
    err "WeeChat installed is old: ${wcver}"
    err "Install from: https://weechat.org/download/weechat/stable"
    exit 1
  }

  setup-nick-conf
  mkdir -p $H

  err "preparing for 1st run setup"
  setup-theme-conf
  setup-script-conf
  setup-server-conf

  err "downloading some WeeChat plugins..."
  pyscript autosort.py
  pyscript grep.py
  pyscript cmd_help.py
  pyscript colorize_nicks.py
  pyscript go.py
  pyscript collapse_channel.py
  plscript highmon.pl
  err "...done with plugins."
  err "launching WeeChat for setup (you'll see the terminal blink)"
  WEECHAT_HOME="$H" \
              weechat -a \
              -r "$nick_conf" \
              -r "$theme_conf" \
              -r "$script_conf" \
              -r "$server_conf"  \
              -r "/save;/quit;"
  chmod -R go-rwx ~/.weechad
  err "Setup completed! Now copy ./weechad in your PATH"

  err "at last I'm generating your startup script in ~/weechad"
  cat <<EOF > ~/weechad
#!/bin/sh
WEECHAT_HOME=\$HOME/.weechad weechat
EOF
  chmod +x ~/weechad
  err "Done! enjoy being a Chad 🗿"
  err "Additional install modules available:"
  err "INSTALL=tomb    setup  # encrypts all ~/.weechad data in a tomb"
  err "INSTALL=darkirc setup  # builds a local darkirc node for P2P IRC"

  ## END OF MAIN
  ##############
}

logo() {
  cat <<EOF
⣦⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠹⣿⠛⠿⠷⣶⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢿⣆⠀⠀⠀⠈⠉⠛⠿⢷⣶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⢿⡆⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠿⢷⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠘⣿⡄⠀WeeChat⠀⠀⠀⠀⠉⠙⠛⢷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠸⣷⡀   setup     ⠀⠀⠀⠉⠛⠿⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢽⣧⠀⠀   for Chads⠀⠀⠀⠀⠀⠀⠉⠛⠻⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢻⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⢿⡆⠀⠀    ~/.weechad⠀     ⠀⠀⠀⠈⠙⠿⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠘⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀           ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣶⠶⠶⠶⠶⢶⣦⣤⣌⣙⢳⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢿⣆⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣴⣶⠿⠟⠛⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠻⢿⣧⣄⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡄⠀⣀⣤⣤⣶⡿⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠀⠀⠀⠀⠈⠻⣷⡄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠿⠛⠛⣿⡁⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣦⠀⠀⠀⠀⠀⠘⢿⣦⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⢠⣶⡾⠿⠛⠛⠛⠛⠋⠉⠛⠛⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠈⣿⣦⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡌⢁⣠⣾⢞⣋⣂⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡶⠿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⢰⣾⡿⢿⡛⣿⣿⣿⢻⡿⢷⣦⣀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣷⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠁⠈⠻⢷⣼⣷⣮⣽⣵⣿⣤⣶⠟⠁⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠟⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⣠⣤⣶⣶⣦⣄⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣴⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⠉⣿⣀⠈⢿⡆⠀⠀⠀⠀⠀⠀⣾⡿⠀
⠀⠀⠀⠀⠀⠀⢀⣼⡟⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡆⠀⠀⢻⣷⡀⠏⢻⡆⢸⡇⠀⠀⠀⠀⠀⢀⣿⠃⠀
⠀⠀⠀⠀⠀⣴⡿⠋⠀⠀⠀⣠⣤⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣿⡆⠀⠀⠀⣶⣄⣾⡇⢸⡇⠀⠀⠀⠀⠀⣾⡟⠀⠀
⠀⠀⠀⠀⣼⡏⠀⠀⠀⠀⠘⠉⠙⠈⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢻⣷⡂⠀⠀⣿⣛⣛⠁⣸⡇⠀⠀⠀⠀⣰⣿⡅⠀⠀
⠀⠀⠀⠀⠹⣷⣤⣀⣀⣀⣠⣤⣶⣶⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡙⣷⡄⠀⠀⠙⠿⡶⠿⠁⠀⠀⠀⢰⠟⣿⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⢁⣾⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠹⣷⠀⠀⠀⠀⣀⠀⠀⠀⠀⣴⠏⠀⢻⣷⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⠟⠛⠲⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⢻⡇⠀⠀⠀⠃⠀⠀⢸⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⠁⠀⠀⠀⠀⠘⣻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⠋⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⠛⠛⠛⠛⠛⠛⣽⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⠾⠛⠁⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⣿⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⣀⠀⢀⣐⡧⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⢀⢿⣿⢀⠀⠀⠀⠀⠀⠀⣿⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣏⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡏⠀⠀⠀⠀⠀⠀⠀⢹⣇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣴⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀
⠀⠀⠀⠀⠀⠀⢀⣴⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⡾⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⠀
⠀⠀⠀⠀⠀⠀⣼⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⣶⡿⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀
⠀⠀⠀⠀⠀⠀⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⠿⠛⠋⠉⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀
⠀⠀⠀⠀⠀⠀⠈⠙⠻⢷⣶⣤⣤⣀⣀⣀⣀⣠⣶⠿⠋⠀⠀⠀⠀⠀⠘⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣆⠀⠀⠀⠀⠀⠀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡆⠀⠀⢀⣴⡾⠛⠁⠀⣀⣀⠤⠖⠊⠉⠀⠀⠀⠀⠀⠉⠁
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇⠀⣰⣿⣏⣀⣤⠴⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
EOF
}
err() { >&2 printf "🗿 $*\n"; }

setup-nick-conf() {
  # running in terminal or through a pipe?
  if [ -t 0 ]; then
    if [ "$NICK" = "" ]; then
      err "Chose a nickname?"
      read nick
    else
      nick="$NICK"
    fi
  else
    if [ "$NICK" = "" ]; then
      err "Nickname undefined! Run setup locally or define your NICK:"
      err "curl -Ls dyne.org/weechad/setup | NICK=yournick bash"
      exit 1
    else
      nick="$NICK"
    fi
  fi
  nick_conf="/set irc.server_default.nicks \"${nick},${nick}_,${nick}__,${nick}__\""
  err "OK $nick! I'm generating your configuration in ~/.weechad"
}

setup-theme-conf() {
  # THEME
  while IFS= read -r line; do
    [ "$line"      = ""  ] && continue
    [ "${line:0:1}" = "#" ] && continue
    theme_conf="$theme_conf;`printf '%s' "$line"`"
  done <<EOF
# requires: 256 color terminal
/set weechat.look.buffer_notify_default message
/set weechat.look.color_nick_offline on
/set weechat.look.prefix_action " •"
/set weechat.look.prefix_join "▬▶"
/set weechat.look.prefix_network "▬▬"
/set weechat.look.prefix_quit "◀▬"
/set weechat.look.prefix_same_nick "⤷"
/set weechat.look.prefix_suffix "│"
/set weechat.look.read_marker_string "─"
/set weechat.look.separator_horizontal ""
/set weechat.look.scroll_page_percent 50
/set weechat.color.chat_channel darkgray
/set weechat.color.chat_delimiters darkgray
/set weechat.color.chat_highlight_bg 60
/set weechat.color.chat_host darkgray
/set weechat.color.chat_nick darkgray
/set weechat.color.chat_nick_colors "cyan,magenta,green,brown,lightblue,default,lightcyan,lightmagenta,lightgreen,blue,31,35,38,40,49,63,70,80,92,99,112,126,130,138,142,148,160,162,167,169,174,176,178,184,186,210,212,215,247"
/set weechat.color.chat_nick_offline darkgray
/set weechat.color.chat_prefix_action darkgray
/set weechat.color.chat_prefix_join 24
/set weechat.color.chat_prefix_network darkgray
/set weechat.color.chat_prefix_quit 23
/set weechat.color.chat_prefix_suffix 16
/set weechat.color.chat_read_marker 16
/set weechat.color.chat_tags darkgray
/set weechat.color.chat_time darkgray
/set weechat.color.chat_time_delimiters 234
/set weechat.color.nicklist_away 244
/set weechat.color.separator 16
/set irc.look.color_nicks_in_names on
/set irc.look.color_nicks_in_server_messages off
/set irc.color.message_join darkgray
/set irc.color.message_quit darkgray
/set irc.color.reason_quit darkgray
/set colorize_nicks.look.colorize_input on
/set colorize_nicks.look.ignore_tags "irc_join,irc_part,irc_quit"
/set script.color.text_bg_selected 234
/trigger add url modifier weechat_print "${tg_tags} !~ irc_quit" ";[a-z]+://\S+;${color:228}${color:underline}${re:0}${color:reset};" ""
/trigger add nick modifier weechat_print "${tg_tags} =~ irc_nick" ";is now known as;${color:darkgray}is now known as;" ""
/trigger add disconnect modifier "weechat_print" "${tg_tags} !~ . && ${tg_buffer} !~ irc.server." ";irc: disconnected from server;${color:red}irc: disconnected from server;" ""
EOF
}

setup-script-conf() {
  script_conf=""
  while IFS= read -r line; do
    [ "$line"      = ""  ] && continue
    [ "${line:0:1}" = "#" ] && continue
    script_conf="$script_conf;`printf '%s' "$line"`"
  done <<EOF
/autosort helpers set monitors_buffers_first ${if:${buffer.full_name}!~^core\.(chan|high|news)mon$}
/autosort rules insert 3 ${monitors_buffers_first}
/set plugins.var.python.cmd_help.color_delimiters "*white"
/set plugins.var.python.cmd_help.color_arguments "121"
/set plugins.var.python.cmd_help.color_list "121"
/set plugins.var.python.cmd_help.start_on_load "on"
/set plugins.var.python.cmd_help.stop_on_enter "off"
/cmd_help
/highmon monitor
/bar add highmon root top auto 0 4
# /set weechat.bar.highmon.bar_lines 4
EOF
}

setup-server-conf() {
  server_conf=""
  while IFS= read -r line; do
    [ "$line"      = ""  ] && continue
    [ "${line:0:1}" = "#" ] && continue
    server_conf="$server_conf;`printf '%s' "$line"`"
  done <<EOF
# default servers
/server add darkirc localhost/6667 -notls -autoconnect
/server add libera localhost/6697 -tls -autoconnect
EOF
}

pyscript() {
  printf " %s" "$1"
  mkdir -p $H/python $H/python/autoload
  curl -Ls https://weechat.org/files/scripts/${1} > $H/python/${1}
  ln -s $H/python/${1} $H/python/autoload/${1}
  #scripts="$scripts;/script load ${1};/script autoload ${1}"
}
plscript() {
  printf " %s" "$1"
  mkdir -p $H/perl $H/perl/autoload
  curl -Ls https://weechat.org/files/scripts/${1} > $H/perl/${1}
  ln -sf $H/perl/${1} $H/perl/autoload/${1}
  #scripts="$scripts;/script load ${1};/script autoload ${1}"
}

askpass() {
  local p1
  local p2
  err "Set encryption password"
  err "Chose the password to protect your WeeChad setup"
  read -r -s -p "🗿 Type your password: " p1
  >&2 printf "\n"
  read -r -s -p "🗿 Type again to confirm: " p2
  >&2 printf "\n"
  [ "$p1" = "$p2" ] || {
    p1="000000000000000000000000000000000"
    p2="000000000000000000000000000000000"
    err "Password mismatch, perhaps a typo?"
    exit 1
  }
  printf "%s" "$p1"
  p1="000000000000000000000000000000000"
  p2="000000000000000000000000000000000"
  return 0
}

install-something() {
  case "$1" in
    weechat)
    ;;
    darkfi)
    ;;
    tomb)
      [ -d "$H" ] || {
        err "Setup weechad first, then install it in a tomb."
        exit 1; }
      [ -r "$HOME/weechad.tomb" ] && {
        err "Cannot overwrite existing tomb $HOME/weechat.tomb"
        exit 1; }
      [ -r "$HOME/weechad.tomb.key" ] && {
        err "Cannot overwrite existing tomb key $HOME/weechat.tomb.key"
        exit 1; }
      local tombver=2.11
      local tomb=""
      while true; do # install tomb if missing
        [ -x /usr/bin/tomb ] && { tomb="/usr/bin/tomb"; break; }
        [ -x /usr/local/bin/tomb ] && { tomb="/usr/local/bin/tomb"; break; }
	      err "install Tomb from latest source"
        ttmp=`mktemp`
		    curl -Ls https://files.dyne.org/tomb/Tomb-${tombver}.tar.gz \
             > /tmp/"$ttmp".tar.gz
        tar xf /tmp/"$ttmp".tar.gz -O "Tomb-${tombver}/tomb" > "$HOME/tomb"
        tomb="$HOME/tomb"
        break
      done
      set -e
      local pp=`askpass`
      $tomb dig -s 64   $HOME/weechad.tomb
      $tomb forge --ignore-swap --unsafe \
            --tomb-pwd "$pp" -k $HOME/weechad.tomb.key
      $tomb lock --ignore-swap --unsafe \
            --tomb-pwd "$pp" -k $HOME/weechad.tomb.key $HOME/weechad.tomb
      $tomb open --ignore-swap --unsafe \
            --tomb-pwd "$pp" -k $HOME/weechad.tomb.key $HOME/weechad.tomb
      mv $H /media/weechad/weechad && mkdir -p $H
      printf "weechad .weechad\n" > /media/weechad/bind-hooks
      $tomb close weechad
      set +e
      err "Tomb setup complete! now you can:"
      err "$tomb open -k \$HOME/weechad.tomb.key \$HOME/weechad.tomb"
      err "To improve privacy remove the key from this machine!"
      err "For more information see https://dyne.org/docs/tomb"
    ;;
  esac
}

main
